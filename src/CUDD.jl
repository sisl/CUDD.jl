module CUDD

using CUDD_jll
using CEnum

# Files automatically generated by Clang.jl
include(joinpath(@__DIR__, "gen", "libcudd_common.jl"))
include(joinpath(@__DIR__, "gen", "libcudd_api.jl"))

# Missing C macros omitted by Clang.jl

Cudd_Not(node) =
    convert(Ptr{Nothing}, xor(convert(UInt,node), 1))

Cudd_IsComplement(node) =
    isone(convert(UInt,node) & 1)

Cudd_Regular(node) = 
    convert(Ptr{Nothing}, convert(UInt,node) & ~1)

# export everything
foreach(names(@__MODULE__, all=true)) do s
    if startswith(string(s), "Cudd_")
        @eval export $s
    end
end

# More user-friendly interface for ADD
include("ADD.jl")
include("ADD_apply.jl")
include("ADD_find.jl")
include("ADD_abs.jl")
include("ADD_inverse.jl")
include("ADD_ITE.jl")
include("ADD_negate.jl")
include("ADD_walsh.jl")

end # module
